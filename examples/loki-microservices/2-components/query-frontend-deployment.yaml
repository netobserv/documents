kind: Deployment
apiVersion: apps/v1
metadata:
  name: loki-microservices-query-frontend
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: loki
    app.kubernetes.io/name: loki-microservices
    app.kubernetes.io/version: 2.5.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-microservices
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: query-frontend
        app.kubernetes.io/instance: loki
        app.kubernetes.io/name: loki-microservices
    spec:
      restartPolicy: Always
      serviceAccountName: loki-microservices
      schedulerName: default-scheduler
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: query-frontend
                  app.kubernetes.io/instance: loki
                  app.kubernetes.io/name: loki-microservices
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: query-frontend
                    app.kubernetes.io/instance: loki
                    app.kubernetes.io/name: loki-microservices
                topologyKey: failure-domain.beta.kubernetes.io/zone
      terminationGracePeriodSeconds: 30
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: query-frontend
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
          terminationMessagePolicy: File
          image: 'grafana/loki:2.6.1'
          args:
            - '-config.file=/etc/loki/config/config.yaml'
            - '-config.expand-env=true'
            - '-target=query-frontend'
          env:
            - name: ACCESS_KEY_ID
              valueFrom:
                secretKeyRef: 
                  name: loki-microservices
                  key: ACCESS_KEY_ID
            - name: SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef: 
                  name: loki-microservices
                  key: SECRET_ACCESS_KEY
      serviceAccount: loki-microservices
      volumes:
        - name: config
          configMap:
            name: loki-microservices
            defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600